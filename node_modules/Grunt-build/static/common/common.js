/**
 * Author: denghuafeng
 * Date: 2016/4/19
 * Plugin Name: common.js
 * Description: 公共模块，包括
 * API: API, //对外暴露API
 * util: util, //对外暴露工具
 * user: user, //对外暴露用户信息
 * 以及头部、首页其他的初始化
 */
define( [
    "http://ptres.37.com/js/sq/widget/sq.tab2015.js",
    "http://ptres.37.com/js/sq/widget/sq.dialog2015.js",
    "http://ptres.37.com/js/sq/widget/sq.login2015.js",
    "http://ptres.37.com/js/sq/widget/sq.statis.js",
    "http://ptres.37.com/js/sq/widget/sq.qrcode2015.js",
    "http://ptres.37.com/js/sq/widget/sq.cornertip2015.js",
    "http://ptres.37.com/js/sq/widget/sq.carousel2015.js",
    "http://ptres.37.com/js/sq/widget/sq.footer.js"
], function() {
    /**
     @description	平台api接口地址
     */
    var API = {
        searchGame: "http://game.37.com/",
        searchGift: "http://gift.37.com",
        getMsg: "http://my.37.com/user/message.php",
        getServer: "http://gameapi.37.com/index.php",
        sign: "http://shop.37.com/sign/index.php"
    };

    /**
     @description	用户信息相关，会对外暴漏，供其他地方调用
     */
    var user = {
        loginUser: null, //new 出来的登录控件对象，在userinit中会被赋值
        isLogin: false, //是否登录
        info: null, //用户信息对象，获取用户信息成功后会更新
        userName: "", //用户名，获取用户信息成功后会更新,
        changeFace: function( src ) {
            $( "#topUserFace" ).attr( {
                src: src
            } );
        },
        success: $.Deferred(), //获取用户信息成功回调队列
        fail: $.Deferred(), //获取用户信息失败回调队列
        /**
         @description	绑定获取用户信息成功以后的回调队列
         @param			function
         --fn		必填，添加到成功队列中的函数
         @return			undefined
         */
        bindSuccess: function( fn ) {
            if ( typeof fn === "function" ) {
                this.success.done( fn );
            }
        },
        /**
         @description	绑定获取用户信息失败以后的回调队列
         @param			function
         --fn		必填，添加到失败队列中的函数
         @return			undefined
         */
        bindFail: function( fn ) {
            if ( typeof fn === "function" ) {
                this.fail.done( fn );
            }
        },
        /**
         @description	跳转独立登录页
         @return			undefined
         */
        skipToLogin: function() {
            location.href = "http://my.37.com/login.html?url=" + encodeURIComponent( location.href );
        }
    };
    /**
     @description	工具部分，会对外暴露
     */
    var util = {
        /**
         @description	顶部导航当前频道按钮背景处理。根据频道的二级域名，以及固定的顺序
         @return			undefined
         */
        setNavStyle: function() {
            var $navList = $( "#navList > li" ),
                curStyle = "current",
                localNav = window.location.hostname,
                currentNav = localNav.split( "." )[ 0 ],
                navs = {
                    "www": 0,
                    "my": 1,
                    "game": 2,
                    "pay": 3,
                    "gift": 4,
                    "shop": 5,
                    "ke": 6,
                    "bbs": 7
                },
                $li = $navList.eq( navs[ currentNav ] );

            $li.addClass( curStyle ).siblings().removeClass( curStyle );
            $li.find( "a" ).removeAttr( "target" );
        },
        /**
         @description	设为首页功能
         @param
             --evt		{object}必填，事件对象
         @return			undefined
         */
        setHome: function( evt ) {
            var obj = evt.target,
                setUrl = window.location.href;
            try {
                obj.style.behavior = "url(#default#homepage)";
                obj.setHomePage( setUrl );
                return false;
            } catch ( e ) {
                SQ.alert( '您的浏览器不支持此操作，请您手动设置主页。<br/>' + '<a href="http:\/\/huodong.37.com\/zt\/platform\/37index\/" target="_blank" style="color:#1ea6ff;">查看如何设置主页</a>' );
            }
        },
        /**
         @description	加入收藏功能
         @param
             --url		{string}必填，需要收藏的url
             --title	{string}必填，收藏时的默认标题
         @return			undefined
         */
        bookMark: function( url, title ) {
            var u = url || window.location.href,
                t = title || document.title;

            try {
                window.external.AddFavorite( u, t );
            } catch ( e ) {
                try {
                    window.sidebar.addPanel( t, u, "" );
                } catch ( e ) {
                    SQ.alert( "请您尝试同时按下Ctrl和D键收藏本页。" );
                }
            }
        },
        /**
         @description	鼠标划过，显示元素，鼠标离开，隐藏元素
         @param			{object}
            --$source	必选，鼠标经过的元素的jquery包装对象
            --$target	必选，要显示或者隐藏的目标元素的jquery包装对象
            --_style	可选，鼠标经过元素切换的样式
         @return			object
         */
        overShow: function( opts ) {
            return new( SQ.Class.create( {
                init: function( opts ) {
                    if ( !opts.$source || !opts.$target ) {
                        SQ.log( "缺少源元素或目标元素" );
                        return;
                    }
                    this.opt = {
                        $source: null,
                        $target: null,
                        _style: "",
                        flag: true,
                        timer: null
                    };
                    $.extend( this.opt, opts || {} );

                    this.evt();
                    if ( typeof this.opt.callback === "function" ) {
                        this.opt.callback();
                    }
                },
                evt: function() {
                    var o = this.opt;
                    o.$source.on( {
                        "mouseenter": function() {
                            if ( o._style ) {
                                $( this ).addClass( o._style );
                            }
                            o.$target.show();
                        },
                        "mouseleave": function() {
                            var $this = $( this );
                            o.timer = setTimeout( function() {
                                if ( !o.flag ) {
                                    return;
                                }
                                if ( o._style ) {
                                    $this.removeClass( o._style );
                                }
                                o.$target.hide();
                            }, 100 );
                        }
                    } );

                    o.$target.on( {
                        "mouseenter": function() {
                            clearTimeout( o.timer );
                            o.timer = null;
                        },
                        "mouseleave": function() {
                            if ( o._style ) {
                                o.$source.removeClass( o._style );
                            }
                            $( this ).hide();
                        }
                    } );
                }
            } ) )( opts );
        },
        /**
         @description	顶部搜索模块
         @param			{object}
             --selChild		可选，搜索下拉类型列表，默认："a"
             --$searchSel	可选，搜索下拉类型值，默认：$("#searchSel")
             --$searchSelLi	可选，搜索下拉类型列表框，用于显示或隐藏，默认：$("#searchSelLi")
             --$searchForm	可选，搜索表单，默认：$("#search-form")
             --$searchType	可选，隐藏的表单域，搜索类型，默认：$("#searchType")
             --$searchKey	可选，关键字input，默认：$("#searchKey")
             --$searchSub	可选，表单提交按钮，默认：$("#searchSub")
         @return			object
         */
        mySearch: function( opts ) {
            return new( SQ.Class.create( {
                init: function( opts ) {
                    this.opt = {
                        selChild: "a",
                        $searchSel: $( "#searchSel" ),
                        $searchSelLi: $( "#searchSelLi" ),
                        $searchForm: $( "#search-form" ),
                        $searchType: $( "#searchType" ),
                        $searchKey: $( "#searchKey" ),
                        $searchSub: $( "#searchSub" ),
                        $aboutRes: $( "#sResultList" ),
                        $gameTpl: $( "#searchGameTpl" ),
                        $giftTpl: $( "#searchGiftTpl" )
                    };
                    $.extend( this.opt, opts || {} );
                    this.sType = 1;
                    //搜索分类隐藏/显示切换
                    util.overShow( {
                        $source: this.opt.$searchSel,
                        $target: this.opt.$searchSelLi
                    } );
                    this.evt();
                },
                /**
                 @description	顶部搜索，获取搜索时相关的的搜索内容
                 @param
                    --k		{string}必填，搜索时的key
                    --pz	{string}可选，数据条数
                 @return			undefined
                 */
                getAboutRes: function( k, pz ) {
                    if ( !k ) {
                        this.opt.$aboutRes.hide();
                        return;
                    }
                    var _this = this,
                        $aboutRes = this.opt.$aboutRes,
                        $tpl = _this.sType === 1 ? this.opt.$gameTpl : this.opt.$giftTpl,
                        url = "http://gameapi.37.com/index.php";

                    util.callApi( {
                        url: url,
                        dataType: "jsonp",
                        data: {
                            c: "gamedata",
                            a: "filter_game",
                            keyword: k,
                            page_size: pz
                        },
                        successCall: function( res ) {
                            var tpl = $tpl.html(),
                                games = res.data.games,
                                l = games.length;

                            if ( !l ) {
                                $aboutRes.hide();
                                return;
                            }
                            if ( _this.sType === 2 ) {
                                for ( var i = 0; i < l; i++ ) {
                                    games[ i ].SEARCH_URL = "http://gift.37.com/?type=gift&keyword=" + games[ i ].NAME
                                }
                            }
                            $aboutRes.show();
                            //$aboutRes.html(SQ.T( tpl, res.data.games )).show();
                            $aboutRes[ 0 ].innerHTML = SQ.T( tpl, games );
                        }
                    } );


                },
                /**
                 @description	搜索时游戏、礼包的切换
                 @param
                     --type		{int}必填，搜索时的key。1:游戏，2：礼包
                 @return			undefined
                 */
                changeType: function( type ) {
                    if ( !type ) {
                        SQ.log( "页面按钮缺少data-type属性" );
                        return;
                    }
                    var o = this.opt,
                        t = parseInt( type, 10 ),
                        tp = {
                            game: {
                                t: "game",
                                n: "keyword"
                            },
                            gift: {
                                t: "gift",
                                n: "keyword"
                            }
                        };

                    if ( t !== 1 && t !== 2 ) {
                        SQ.alert( "目前参数只支持1或2" );
                        return;
                    }
                    if ( t === 1 ) {
                        o.$searchForm.attr( {
                            action: API.searchGame
                        } );
                        o.$searchType.val( tp.game.t );
                        o.$searchKey.attr( {
                            name: tp.game.n
                        } );
                    } else if ( t === 2 ) {
                        o.$searchForm.attr( {
                            action: API.searchGift
                        } );
                        o.$searchType.val( tp.gift.t );
                        o.$searchKey.attr( {
                            name: tp.gift.n
                        } );
                    }
                    this.sType = t;
                },
                evt: function() {
                    var _this = this,
                        o = this.opt,
                        tOut = null;
                    //搜搜类型选择事件
                    o.$searchSelLi.on( "click", o.selChild, function( e ) {
                        e.preventDefault();
                        o.$searchSel.text( $( this ).text() );
                        _this.changeType( $( this ).data( "type" ) );
                    } );
                    //提交搜索事件
                    o.$searchSub.on( "click", function( e ) {
                        if ( !$.trim( o.$searchKey.val() ) ) {
                            SQ.alert( "您还没有输入关键字" );
                            e.preventDefault();
                            return false;
                        }
                    } );
                    if ( !o.$aboutRes.length ) {
                        return;
                    }
                    //实时搜索事件
                    o.$searchKey.on( "keyup", function() {
                        var v = $.trim( $( this ).val() );
                        _this.getAboutRes( v, 5 );
                        $( this ).data( "v", v );
                    } );
                    //实时结果框消失事件
                    o.$searchKey.on( "focusout", function() {
                        tOut = setTimeout( function() {
                            o.$aboutRes.hide();
                            clearTimeout( tOut );
                        }, 600 );
                    } );
                }
            } ) )( opts );
        },
        /**
         @description	公共callapi
         @param			{object}
             --type			可选，默认："get"
             --url			必选，请求接口
             --data			必选，请求参数
             --dataType		可选，返回的数据类型，默认："jsonp"
             --successCall	可选，请求成功后的回调函数，参数：返回的结果
             --failCall		可选，请求失败后的回调函数
             --alwaysCall	可选，不论成功失败都执行的回调函数
         @return			undefined
         */
        callApi: function( o ) {
            var def = {
                    type: "get",
                    url: "",
                    data: null,
                    dataType: "json"
                },
                s = null,
                f = null,
                a = null;
            if ( o.successCall ) {
                s = o.successCall;
                delete o.successCall;
            }
            if ( o.failCall ) {
                f = o.failCall;
                delete o.failCall;
            }
            if ( o.alwaysCall ) {
                a = o.alwaysCall;
                delete o.alwaysCall;
            }

            return $.ajax( $.extend( true, {}, def, o ) ).done( function( res ) {
                s && s( res );
            } ).fail( function() {
                f && f();
            } ).always( function() {
                a && a();
            } );
        },
        /**
         @description	刷新登录框中的个人积分，主要在积分商城用到，签到也会更新积分
         @param			{object}
             --p				必选，{int} - 分数
             --$dom			可选，需要更新积分的dom对象，为空时默认$( "#mypoints" )
             --fillFlag		可选，{boolean} - 为 true 时， 参数 p 就是积分，不传则 p 是分数差，要做计算
         @return			undefined
         */
        refreshPoint: function( p, $dom, fillFlag ) {
            $dom = $dom || $( "#mypoints" );
            if ( fillFlag ) {
                $dom.text( p );
            } else {
                if ( typeof user.info.POINT === "string" ) {
                    user.info.POINT = +user.info.POINT;
                }
                $dom.text( user.info.POINT = user.info.POINT + parseInt( p ) );
            }
        },
        /**
         @description	更新顶部公共部分的个人信息
         @return			undefined
         */
        updataTopMsg: function() {
            app.topUser.getMsg( function( result ) {
                app.topUser.creatMsgDom( result );
            }, function() {
                SQ.log( "请求接口失败" );
            } );
        },
        /**
         @description	注册成功以后右下角弹窗提示
         @param
             --flag		{boolean}  ture:代表平台弹窗注册，false:代表独立注册页
         @return			undefined
         */
        cornerTip: {
            init: function() {
                var _this = this;

                var c = SQ.cookie( "notice_37wan_com\\[13\\]", {
                    encodeKey: false
                } );
                if ( c ) {
                    c = c.split( "|" );
                    c[ 0 ] !== user.userName ?
                        this._remote() :
                        this._tip( c );
                } else {
                    this._remote();
                }

            },
            _remote: function() {
                var _this = this;
                $.get( "http://my.37.com/api/notice_api.php?action=is_reg_notice", function() {
                    var cc = SQ.cookie( "notice_37wan_com\\[13\\]", {
                        encodeKey: false
                    } );
                    if ( cc ) {
                        _this._tip( cc.split( "|" ) );
                    }
                }, "jsonp" );
            },
            _tip: function( c ) {
                if ( ( +c[ 1 ] ) ) {
                    new SQ.CornerTip( {
                        once: true,
                        count: 5,
                        grade: c[ 2 ],
                        title: c[ 3 ],
                        zIndex: 50
                    } );
                    c[ 1 ] = 0;
                    SQ.cookie( "notice_37wan_com[13]", c.join( "|" ), {
                        path: "/",
                        domain: "37.com",
                        encodeKey: false
                    } );
                }
            }
        },
        /**
         @description	设置登录框信息
         @param
             --evt		{object}  各种dom对象的集合
             --username 	帐号名的dom对象
             --mypoints		积分的dom对象
             --progressVip 	vip Icon的dom对象
             --avatar 		头像的dom对象
             --avatarImg 	头像的图片地址
             --progressCore vip进度条的dom对象
             --total 		vip进度条的最大长度
             --data 		{object}  用户的信息
         @return			undefined
         */
        setUserinfo: function( evt, data ) {
            var o = $.extend( true, {}, {
                    username: $( "#js-left-username" ),
                    mypoints: $( "#mypoints" ),
                    progressVip: $( "#progress-vip" ),
                    avatar: $( "#avatar" ),
                    avatarImg: "http://img1.37wanimg.com/www2015/images/user/avatar/{{avatar}}.png",
                    progressCore: $( "#progress-core" ),
                    total: 170
                }, evt ),
                isHeight = +data.VIP_DEEP === 8,
                w,
                $myVipDeep = $( "#myVipDeep" ),
                $myVipLevel = $( "#myVipLevel" ),
                $deepGap = $( "#deepGap" ),
                $vipTip = $( "#vipTip" );

            o.username.html( data.LOGIN_ACCOUNT ).prop( "title", data.LOGIN_ACCOUNT );
            o.mypoints.html( data.POINT );
            o.progressVip.addClass( "u-level-0" + data.VIP_DEEP ).prop( "title", "VIP" + data.VIP_DEEP );

            o.avatar.prop( "src", o.avatarImg.replace( "{{avatar}}", data.HEADER ) );

            if ( data.VIP_EXP >= 0 ) {
                if ( data.VIP_DEEP < 8 ) {
                    w = Math.floor( data.VIP_EXP / data.VIP_UPPER * o.total );
                } else {
                    w = o.total;
                }
                o.progressCore.width( w );
            }
            if ( +data.VIP_DEEP === 8 ) {
                $myVipLevel.html( "（" + data.VIP_EXP + "）" );
            } else {
                $myVipLevel.html( "（" + data.VIP_EXP + "/" + data.VIP_UPPER + "）" );
            }
            $myVipDeep.html( "VIP" + data.VIP_DEEP );
            $deepGap.html( data.VIP_UPPER - data.VIP_EXP );
            if ( isHeight ) {
                $vipTip.find( "p" ).eq( 1 ).html( "您已达到最高等级！" );
                $vipTip.find( ".vip-tip-btn" ).css( {
                    width: "70px"
                } ).find( "> .fr" ).hide();
            }
        },

        /**
         @description	点击埋点统计
         @return		undefined
         */
        statistics: {
            init: function( la ) {
                var _this = this;
                _this.la = la || "";

                _this.statisUrl = "http://pt.clickdata.37wan.com/ps.gif";

                /**
                 @description	37新平台的点击数据参数介绍
                 @param
                     - id	    必选，默认值17,37平台点击数据采集
                     - la	    必选，用户帐号
                     - e1	    必选，点击当前页面名称，如www
                     - e2	    必选，点击当前页面地址，如www.37.com
                     - e3	    必选，具体跳转地址（有可能是触发的javascript）,如mir.37.com
                     - e4	    必选，标题
                     - e5	    必选，区域位置
                     - e6	    必选，访客唯一标识（tg_uv）
                     - e7	    必选，基础传输变量（tg_fdata）
                     - e8	    必选，document_referer(进入当前页面的前一页面地址)
                     - e9	    必选，游戏ID（game_id）
                     - e10	    必选，时间戳
                 @return		undefined
                 */
                _this.opts = {
                    "id": 17,
                    "la": "",
                    "e1": _this.getHostFirst(),
                    "e2": _this.getDoc(),
                    "e3": "",
                    "e4": "",
                    "e5": "",
                    "e6": SQ.cookie( "tg_uv" ) || "",
                    "e7": SQ.cookie( "tg_fdata" ) || "",
                    "e8": document.referrer && _this.getDoc( document.referrer ),
                    "e9": 0,
                    "e10": ( new Date() ).getTime()
                };

                _this.events();

            },

            /**
             @description	获取域名第一个值，比如：获取 www.37.com 的 www
             */
            getHostFirst: function() {
                var hostFirst = "",
                    url = window.location.href;

                if ( url && url.indexOf( "http" ) > -1 ) {
                    hostFirst = url.split( "://" )[ 1 ].split( "/" )[ 0 ].split( "." )[ 0 ];
                }
                return hostFirst;
            },

            /**
             @description	获取域名
             如果是37.com域名下的，就获取整个链接，比如：获取 http://vip.37.com/?c=vip&a=privilege 的 vip.37.com/?c=vip&a=privilege
             如果是外部链接，比如：获取 http://www.baidu.com/xxx/yyyy/ 的 www.baidu.com
             */
            getDoc: function( url ) {
                var hostName = "",
                    url = url || window.location.href;

                if ( url && url.indexOf( "http" ) > -1 ) {
                    hostName = url.split( "://" )[ 1 ].split( "/" )[ 0 ];
                    if ( url.indexOf( ".37.com" ) > -1 ) {
                        hostName = url.split( "://" )[ 1 ];
                    }
                }
                return encodeURIComponent( hostName );
            },

            tj: function() {
                var _this = this,
                    img = new Image(),
                    url = _this.statisUrl +
                        "?id=" + _this.opts.id +
                        "&la=" + (user.userName || _this.la) +
                        "&e1=" + _this.opts.e1 +
                        "&e2=" + _this.opts.e2 +
                        "&e3=" + _this.opts.e3 +
                        "&e4=" + _this.opts.e4 +
                        "&e5=" + _this.opts.e5 +
                        "&e6=" + _this.opts.e6 +
                        "&e7=" + _this.opts.e7 +
                        "&e8=" + _this.opts.e8 +
                        "&e9=" + _this.opts.e9 +
                        "&e10=" + ( new Date() ).getTime();

                img.src = url;
            },

            events: function() {
                var _this = this,
                    opt = {};

                $( document )
                    .on( "click", "*[data-position]", function() {
                        opt = {
                            "e3": _this.getDoc( $( this ).attr( "href" ) ),
                            "e4": $( this ).attr( "title" ) ? encodeURIComponent( $( this ).attr( "title" ) ) : "",
                            "e5": $( this ).data( "position" ).e5,
                            "e9": $( this ).data( "position" ).e9 ? $( this ).data( "position" ).e9 : 0
                        };

                        _this.opts = $.extend( _this.opts, opt );
                        _this.tj();
                    } );

            }
        }
    };
    /**
     @description	domready后需要执行的逻辑
     */
    var app = {
        init: function() {
            if ( SQ.Statis ) {
                SQ.Statis.setReferer();
            }
            util.setNavStyle();
            this.userInit();
            this.topSearch();
            this.topUser.init();
            this.overViewInit();
            this.friendLinkHide();
            this.topAllGames.init();
            this.commonFooter();
            this.evt();
            util.statistics.init();
        },
        allGameImgShow: false,

        userInit: function() {
            var loged = function( userInfo, type ) {
                user.isLogin = true;
                user.info = userInfo;
                user.userName = userInfo.LOGIN_ACCOUNT;
                user.success.resolve();
                util.cornerTip.init( true );
            };
            user.loginUser = new SQ.Login( {
                dialog: true, //统一登录弹窗？
                dialogOpts: {
                    hideId: SQ.Statis.hasAdReferer(),	//当有refer等推广渠道的参数时，隐藏姓名和身份证
                    zIndex: 1000 //弹窗层级
                }, //弹窗参数？
                gameid: "",
                vcOption: {
                    showVC: function() {
                        return $( "#vcodeBox" );
                    },
                    checked: function() {

                    },
                    state: {
                        normal: "vcode-tip",
                        right: "right-ico",
                        error: "error-ico",
                        pending: "vcode-box"
                    },
                    //template:"",
                    logBox: "#vcodeBox"
                },
                logBox: "#vcodeBox",
                lr: loged, // 登录成功和注册成功同时触发该回调
                unlog: function( res, type ) {}

                /*,
                 out: function() {
                 location.reload();
                 }*/
            } );
            //独立登录页特殊处理，不判断用户登录状态
            if ( window.location.href.indexOf( "login.html" ) < 0 ) {
                user.loginUser.getUserInfo();
            }

            /*			user.loginUser.bind( "reged", function(){
             user.loginUser.dialog.toStep(2);
             });*/

            user.loginUser.bind( "fail", function() {
                user.fail.resolve();
            } );

            user.loginUser.bind( "out", function() {
                window.location.reload();
            } );
            user.loginUser.bind( "reged", function() {

            } );
        },
        /**
         @description	设为首页，加入收藏事件
         @return			undefined
         */
        evt: function() {
            var _this = this,
                $setHomePage = $( "#setHomePage" ),
                $bookMark = $( "#bookMark" ),
                $allGame = $( "#allGame" ),
                $allGameImg = $( "#allGameList" ).find( "img" );

            $setHomePage.on( {
                "click": function( e ) {
                    util.setHome( e );
                }
            } );
            $bookMark.on( {
                "click": function( e ) {
                    util.bookMark();
                }
            } );

            $allGame.on( {
                "mouseenter": function() {
                    if ( _this.allGameImgShow ) {
                        return;
                    }
                    $allGameImg.each( function( index ) {
                        $( this ).attr( {
                            "src": $( this ).data( "src" )
                        } );
                    } );
                    _this.allGameImgShow = true;
                }
            } );
        },

        /**
         @description	初始化顶部搜索栏功能
         @return			undefined
         */
        topSearch: function() {
            util.mySearch();
        },
        /**
         @description	顶部登录部分业务逻辑
         */
        topUser: {
            init: function() {
                var _this = this;
                _this.notLoged();
                user.bindSuccess( function() {
                    _this.loged();
                } );
            },
            /**
             @description	登录后将用户VIP等级样式写入页面
             @return			undefined
             */
            setVipStyle: function() {
                var vipStyle = "u-level-0",
                    $topLv = $( "#topLv" ),
                    $topLv2 = $( "#topLv2" ),
                    vipDeep = user.info.VIP_DEEP;

                vipStyle += vipDeep;
                $topLv.addClass( vipStyle ).attr( "title", "VIP" + vipDeep );
                $topLv2.addClass( vipStyle ).attr( "title", "VIP" + vipDeep );
            },
            /**
             @description	登录后将用户名写入到dom
             @return			undefined
             */
            setUserName: function() {
                var $topUserName = $( "#topUserName" ),
                    $topUserName2 = $( "#topUserName2" ),
                    $topUserFace = $( "#topUserFace" );

                $topUserName.html( user.userName );
                $topUserName2.html( user.userName );
                $topUserFace.attr( {
                    "src": "http://img1.37wanimg.com/www2015/images/user/avatar/" + user.info.HEADER + ".png"
                } );
            },
            /**
             @description	获取用户短消息
             @return			undefined
             */
            getMsg: function( fn, fail ) {
                //if ( !this.isGetUserMsg ) {
                var getMsgAjax = $.ajax( {
                    url: API.getMsg,
                    type: "get",
                    dataType: "jsonp",
                    data: {
                        action: "get_new_messages",
                        ajax: 0
                    },
                    cache: false
                } );
                if ( typeof fn === "function" ) {
                    getMsgAjax.done( fn );
                }
                if ( typeof fail === "function" ) {
                    getMsgAjax.fail( fail );
                }
                //第一次获取用户消息后，以后不再次获取
                //this.isGetUserMsg = true;
                //}
            },
            /**
             @description	未登录状态
             @return			undefined
             */
            notLoged: function() {
                var $topToLog = $( "#topToLog" ),
                    $topToReg = $( "#topToReg" );

                $topToLog.on( {
                    "click": function( e ) {
                        e.preventDefault();
                        user.loginUser.dialog.show( 0 );
                    }
                } );

                $topToReg.on( {
                    "click": function( e ) {
                        e.preventDefault();
                        user.loginUser.dialog.show( 1 );
                    }
                } );
            },
            /**
             @description	顶部用户消息，没有消息情况下的操作
             @return			undefined
             */
            clearTopMsg: function() {
                var $topMsgCon = $( "#topMsgCon" ),
                    $hasNoMas = $( "#hasNoMas" ),
                    $checkMsg = $( "#checkMsg" ),
                    $topHasMsg = $( "#topHasMsg" );

                $topMsgCon.find( ">dd" ).hide();
                $topMsgCon.find( ">dt" ).hide();
                $hasNoMas.show();
                $checkMsg.show();
                $topHasMsg.removeClass( "has-msg" );
            },
            /**
             @description	顶部用户消息dom拼装
             @return			undefined
             */
            creatMsgDom: function( result ) {
                if ( result && +result.code > 0 ) {
                    var $topHasMsg = $( "#topHasMsg" ),
                        $hasNoMas = $( "#hasNoMas" ),
                        $msgTotal = $( "#msgTotal" ),
                        $myMessage = $( "#myMessage" );

                    if ( !result.data || !result.data.list ) {
                        return;
                    }
                    var length = result.data.list.length;
                    if ( length ) {
                        $msgTotal.html( result.data.new_num + "条" );
                        var tpl = $myMessage.html(),
                            dom = "";

                        if ( !tpl ) {
                            return;
                        }
                        dom = SQ.T( tpl, result.data.list );
                        dom = dom.replace( /&lt;/g, "<" );
                        dom = dom.replace( /&gt;/g, ">" );
                        dom = dom.replace( /&nbsp;/g, " " );
                        $hasNoMas.prevAll("dd").remove();
                        $hasNoMas.before( dom );
                        $topHasMsg.addClass( "has-msg" );
                    } else {
                        this.clearTopMsg();
                    }
                }
            },
            /**
             @description	登陆后绑定退出按钮事件
             @return			undefined
             */
            topEvt: function() {
                var $topLoged = $( "#topLoged" ),
                    _this = this;

                $topLoged.on( "click", "#topLogout,#topLogout2", function( e ) {
                    e.preventDefault();
                    user.loginUser.toOut();
                } );
            },
            /**
             @description	已登录后执行的回调函数
             @return			undefined
             */
            loged: function() {

                var _this = this,
                    $topUnLog = $( "#topUnLog" ),
                    $topLoged = $( "#topLoged" );

                this.isGetUserMsg = false;
                this.setUserName();
                this.setVipStyle();
                this.getMsg( function( result ) {
                    _this.creatMsgDom( result );
                }, function() {
                    SQ.log( "请求接口失败" );
                } );
                this.topEvt();
                $topUnLog.hide();
                $topLoged.show();
                if(!SQ.cookie('zone')){
                    SQ.cookie('zone','cn',{domain:'37.com',path:'/',expires:365});
                }
            }
        },
        /**
         @description	初始化所有鼠标经过隐藏/显示切换
         @return			undefined
         */
        overViewInit: function() {
            var $allGame = $( "#allGame" ),
                $allGameList = $( "#allGameList" ),
                allGameStyle = "all-game-show",
                $setHome = $( "#setHome" ),
                $setHomeUl = $( "#setHomeUl" ),
                $topUserName = $( "#topUserName" ),
                $topUserInfo = $( "#topUserInfo" );

            //所有游戏隐藏/显示切换
            //util.overShow( {
            //    $source: $allGame,
            //    $target: $allGameList,
            //    _style: allGameStyle,
            //    callback: function() {
            //        /**
            //         @description	初始化所有游戏tab切换
            //         @return			object
            //         */
            //        var topAllGameTab = new SQ.Tab( {
            //            el: "#allGameList", // 容器选择器 默认 body
            //            tabs: "#TopAllGameName .top-allgame-li", //选项 选择器 默认 li
            //            panels: ".all-game-img", //内容选择器 默认 div
            //            eventType: "hover", //切换事件 默认点击
            //            index: 0, //初始显示第一个
            //            auto: false, // 是否自动切换
            //            interval: 5000, //自动切换时间间隔
            //            currentClass: "current" // 当前选项的样式class
            //        } );
            //    }
            //} );

            //消息的隐藏/显示切换，这个初始化应该放在获取消息的回调函数中。
            var $topHasMsg = $( "#topHasMsg" ),
                $topMsgCon = $( "#topMsgCon" );
            util.overShow( {
                $source: $topHasMsg,
                $target: $topMsgCon
            } );
            //设为首页隐藏/显示切换
            util.overShow( {
                $source: $setHome,
                $target: $setHomeUl
            } );
            //顶部用户帐号信息隐藏/显示切换
            util.overShow( {
                $source: $topUserName,
                $target: $topUserInfo
            } );
        },
        /**
         @description	友情连接隐藏显示切换
         @return			undefined
         */
        friendLinkHide: function() {
            var $hidelinks = $( "#hidelinks" );
            if ( !$hidelinks.length ) {
                return;
            }
            var $firendLinkBox = $( "#firendLinkBox" ),
                btnStyle = "hidelinks",
                boxStyle = "hide-box";

            $hidelinks.toggle( function() {
                $( this ).removeClass( btnStyle );
                $( this ).text( "收起" );
                $firendLinkBox.removeClass( boxStyle );
            }, function() {
                $( this ).addClass( btnStyle );
                $( this ).text( "展开" );
                $firendLinkBox.addClass( boxStyle );
            } );
        },
        /**
         @description   顶部更多游戏
         @return        undefined
         */
        topAllGames: {
            url: {
                header: "http://ptres.37.com/content/cache/header.js",
                moreData: "http://ptres.37.com/content/s_www/pt_2015_head_nav_games.js"
            },
            isMoreOpen : false,
            mapOfMoreState: {
                hot: '<span class="h"></span>',
                "new": '<span class="n"></span>'
            },
            init: function(){
                this._events();
            },
            _getMoreData: function() {
                var that = this;
                /*$.ajax({
                 url: this.url.header,
                 cache: false,
                 dataType: "jsonp",
                 jsonpCallback: "content_callback_header"
                 }).done(function( res ) {
                 if ( res.code === 1 && res.msg && res.msg.leader_game ) {
                 that._parseMore( res.msg.leader_game );
                 } else {
                 SQ.log && SQ.log( "SQ.Game: 顶部数据异常" );
                 }
                 }).fail(function() {
                 SQ.log && SQ.log( "SQ.Game: 顶部数据异常" );
                 });*/
                $.getScript( this.url.moreData, function() {
                    res = sq_content_s_www_pt_2015_head_nav_games;
                    if ( !res ) return;
                    that._parseMore( res.cats );
                } );
            },
            _parseMore: function( data ) {
                var l,
                    i = 0,
                    imgtpl = "<div class=\"all-game-img\"><a href=\"{$link}\" target=\"_blank\" title=\"{$title}\"><img src=\"{src}\" data-src=\"{$src}\" alt=\"{$title}\" width=\"400\" height=\"262\" title=\"{$title}\"/></a><div class=\"all-game-txt\">{$content}</div></div>",
                    gametpl = "<dd class=\"top-allgame-li\"><a href=\"{$DOMAIN_URL}\" target=\"_blank\" title=\"{$NAME}\">{$NAME}{spandom}</a></dd>",
                    imgtemp = [],
                    gametemp = [];
                if ( !data ) {
                    this.close();
                } else {
                    for ( i; i < 18; i++ ) {
                        imgtemp.push( SQ.T( imgtpl.replace( "{src}", i == 0 ? "{$src}" : "http://img1.37wanimg.com/www/images/common/spacer.gif" ), data[i].imgs[0] ) );
                        gametemp.push( SQ.T( gametpl.replace( "{spandom}", data[i].games[0][ "PIN" ] ? this.mapOfMoreState[ data[i].games[0][ "PIN" ]] : "" ), data[i].games[0] ) );
                    }

                    this.$moreWrap.prepend( imgtemp.join("") );
                    this.$morePanel.find( "dt" ).after( gametemp.join("") ).removeClass( "top-loading" );
                    this.$moreTab.data( "getdata", true );
                    var topAllGameTab = new SQ.Tab( {
                        el: "#allGameList", // 容器选择器 默认 body
                        tabs: "#TopAllGameName .top-allgame-li", //选项 选择器 默认 li
                        panels: ".all-game-img", //内容选择器 默认 div
                        eventType: "hover", //切换事件 默认点击
                        index: 0, //初始显示第一个
                        auto: false, // 是否自动切换
                        interval: 5000, //自动切换时间间隔
                        currentClass: "current" // 当前选项的样式class
                    } );
                    topAllGameTab.bind( "change", function( i, e ) {
                        var $dom = e.panels.eq( i ).find( "img" ),
                            imgUrl = $dom.data( "src" ),
                            img = new Image();
                        img.onload = function(){
                            $dom.attr( "src", imgUrl );
                        };
                        img.src = imgUrl;
                    } );
                }
            },
            openMore: function() {
                if ( this.isMoreOpen ) {
                    return;
                }
                if ( !this.$moreWrap ) {
                    this.$moreWrap = $( "#allGameList" );
                }
                if ( !this.$morePanel ) {
                    this.$morePanel = $( "#TopAllGameName" );
                }
                this.$moreTab.addClass( "all-game-show" );
                this.$moreWrap.show();
                this.isMoreOpen = true;
                //this.trigger( "open", "more", {
                //    panel: this.$morePanel,
                //    wrap: this.$moreWrap,
                //    tab: this.$moreTab
                //});
                if ( !this.$moreTab.data("getdata") ) {
                    this._getMoreData();
                }
            },
            closeMore: function() {
                if ( this.isMoreOpen ) {
                    this.$moreTab.removeClass( "all-game-show" );
                    this.$moreWrap.hide();
                    this.isMoreOpen = false;
                    //this.trigger( "close", "more", {
                    //    panel: this.$morePanel,
                    //    wrap: this.$moreWrap,
                    //    tab: this.$moreTab
                    //});
                }
            },
            _events: function(){
                that = this;
                $(".hd-top")
                    .on( "mouseenter mouseleave", "#allGame, #allGameList", function( e ) {
                        if ( !that.$moreTab ) {
                            that.$moreTab = $( "#allGame" );
                        }
                        e.type === "mouseenter" ? that.openMore() : that.closeMore();
                    })
                    .on( "mouseenter mouseleave", "#topUserName, #topUserInfo", function( e ) {
                        if ( !that.$infoTab ) {
                            that.$infoTab = $( this );
                        }
                        if ( !that.$infoMenu ) {
                            that.$infoMenu = $( "#topUserInfo" );
                        }
                    })
                    .on( "mouseenter mouseleave", "#topHasMsg, #topMsgCon", function( e ) {
                        if ( !that.$msgTab ) {
                            that.$msgTab = $( this );
                        }
                        if ( !that.$msgMenu ) {
                            that.$msgMenu = $( "#topMsgCon" );
                        }
                    })
            }
        },
        /**
         @description   公共底部生成
         @return        undefined
         */
        commonFooter: function(){
            new SQ.Footer();
        }
    };

    return {
        API: API, //对外暴露API
        util: util, //对外暴露工具
        user: user, //对外暴露用户信息
        init: function() {
            app.init();
        }
    };
} );