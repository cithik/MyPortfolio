/**
 * Author: honglingbo
 * Date: 2016/5/17
 * Plugin Name: check_account.js
 * Description: 帐号查询模块
 * init: init, //对外暴露执行函数
 */

define(
	[
		"common",
		"modules/modules_common",
		"http://ptres.37.com/js/sq/widget/sq.selectmenu.js",
		"http://ptres.37.com/js/sq/plugin/jquery.ui.position.js?t=1383539951764",
		"http://ptres.37.com/js/sq/widget/sq.validate2015.js",
		"http://ptres.37.com/js/kf2016/lib/laydate/laydate.js",
		"http://ptres.37.com/js/sq/widget/sq.store.js"
	],
function(common, modulesCommon) {
	var cUser = common.user,
		ajaxFn = common.util.callApi,
		modulesUtil = modulesCommon.modulesUtil,
		API = {
				checkcode: 'http://kf.37.com/index.php?c=index&a=check_code', //验证码接口
				addplugin: 'http://kf.37.com/index.php?c=check_account&a=actAdd',//添加查询接口
				aucodeurl: 'http://kf.37.com/index.php?c=index&a=aucode&t=1462520170' //图片验证码连接
		},
		main = {
			init: function() {
				var _this = this;
				_this.getDOM();
				_this.leftMenuInit();
				_this.selectInit();
				_this.event();
				_this.toggleCheckbox('phone-checkbox');
				_this.toggleCheckbox('pact-checkbox');

			},
			aj: {
	            type: "post",
	            cache: false
	        },
			/**
			 * 绑定DOM
			 * @return {[type]} [description]
			 */
			getDOM: function() {
				var _this = this;
				//必填项数组
				_this.$forms = $('form');
				_this.$form4 = $('#service-form-edit4');
				_this.$form3 = $('#service-form-edit3');
				_this.$form2 = $('#service-form-edit2');
				_this.$form1 = $('#service-form-edit1');
				_this.$query_history_group = $('#query-history-group');
				_this.$saveCode = $('#aucode');
				_this.$province = $('#province');
				_this.$city = $('#city');
			},
			/**
			 * 左侧导航初始化
			 * @return {[type]} [description]
			 */
			leftMenuInit: function(){
	            $("#side-check-account").addClass("focus");
	        },
	        /**
			 * 插件生成select
			 * @return {[type]} [description]
			 */
			selectInit: function() {
		        var province = new SQ.Selectmenu({
		            width: 146,
		            height: 300,
		            element: "#province"
		        });
		        var city = new SQ.Selectmenu({
		            width: 146,
		            height: 300,
		            element: "#city"
		        });
		        modulesUtil.selectCity(province, city, $('#city'));
				//游戏下拉框
				modulesUtil.dropdown($('#select_game'));
				/*验证码初始化*/
				modulesUtil.varCodeInit();
			},
			event: function() {
				var _this = this,
					/*表单验证*/
	                v = new SQ.Validate( {
	                    form: _this.$forms,
	                    successView: true
	                } );
	            _this.$forms
                    .on('focus', '.ca select, .ca input', function(e) {
	            		e.preventDefault();
	            		$(this).siblings('.field-right-message, .field-error-message').hide();
                    })
                    .on('blur', '.ca select, .ca input', function(e) {
	            		e.preventDefault();
            			$(this).next('.field-right-message, .field-error-message').show();

                	})
                	//为绑定手机添加验证规则
                	.on('keyup', '#register_phone', function() {
                		var phone = $(this).val(),
                			isCheckPhone = /^0?(1[38][0-9]|15[0-35-9]|14[57]|17[0678])[0-9]{8}$/.test( phone );
                		if(!isCheckPhone && !(phone == '0') && !(phone == '无') ) {
                			$(this).siblings('.field-error-message').text('请输入正确的手机号');
                		}else {
                			$(this).siblings('.field-error-message').text('');
                		}
                	})
                	//为联系手机添加验证规则
                	.on('keyup', '#contact-phone', function() {
                		var phone = $(this).val(),
                			isCheckPhone = /^0?(1[38][0-9]|15[0-35-9]|14[57]|17[0678])[0-9]{8}$/.test( phone );
                		if(!isCheckPhone ) {
                			$(this).siblings('.field-error-message').text('请输入正确的手机号');
                		}else {
                			$(this).siblings('.field-error-message').text('');
                		}
                	})
                	//点击下一步时遍历当前表单必填项是否全部填完且无错误信息
                	.on('click', '.btn-step-next', function(e) {
                		e.preventDefault();
                		var $this = $(this),
                			barwidth = [ 82, 216, 348, 426 ],
                			target = $this.data('next'),
                			$tempform = $(this).closest('.service-form'),
                			formindex = $tempform.index('.service-form'),
                			$tempchilds = $tempform.find('input[data-message], select[data-message]');
        				for(var i = 0, length = $tempchilds.length; i<length; i++) {
        					var $tempchild = $tempchilds.eq(i),
        						ErrorText = $tempchild.next('.field-error-message').text().replace(/\s+/g,"");

							if( !_this.contact_phone_status ){
								if( $tempchild.attr("id") === "contact_phone" ){
									continue;
								}
							}

							if (  $tempchild.attr("id") == "register_date" ){
								if( ($tempchild[0].value == "请选择注册日期" ) || !$tempchild[0].value ){
									SQ.alert( $tempchild.data( "message" ).split(',')[0] );
									return false;
								}
								continue;
							}

							if( $tempchild.val().length <= 0 ) {
        						SQ.alert( $tempchild.data( "message" ).split(',')[0] );
        						return false;
        					}

        					if ( ErrorText.length > 0 && !v.checkField( $tempchild )) {
    							SQ.alert(ErrorText);
        						return false;
        					}
        				}

        				$this.closest('.service-form').hide();
        				$('#'+target).show();
        				$('body, html').animate({ scrollTop: '229'},200);
        				$('.service-bar-tips').children().eq(formindex+1).addClass('on').nextAll().removeClass('on');
        				$('.service-bar-1').animate({width: barwidth[formindex+1]}, 200);


                	})
                	.on('click', '.btn-step-last', function(e) {
                		var $this = $(this),
                			barwidth = [ 82, 216, 348, 426 ],
                			$tempform = $(this).closest('.service-form'),
                			formindex = $tempform.index('.service-form'),
                			target = $this.data('last');
                		e.preventDefault();
                		$this.closest('.service-form').hide();
                		$('#'+target).show();
                		$('body, html').animate({ scrollTop: '229'},200);
                		$('.service-bar-tips').children().eq(formindex-1).addClass('on').nextAll().removeClass('on');
        				$('.service-bar-1').animate({width: barwidth[formindex-1]}, 200);
                	});
            	/**
            	 * 提交逻辑
            	 */
				_this.$form3
					/*添加新的充值记录*/
					/*充值记录增加*/
					.on("click",".service-recharge-add",function(){
						modulesUtil.rechargeRecordInit( 10 );
					})
					/*充值记录减少*/
					.on("click",".recharge-del",function(){
						var $this = $(this);
						modulesUtil.rechargeRecordDel( $this );
					})
					/*点击用户更协议*/
					.on("click",".is-agreement",function(){
						var $this = $(this);
						if( $("input[name='bind']:checked").length ){
							$this.children("span").addClass("on")
						}else{
							$this.children("span").removeClass("on")
						}
					})
					/*提交表单*/
					.on('click', '#commitbtn', function(e) {
						e.preventDefault();
						/*ajax逻辑*/
						// console.log(_this.$formOne.serializeArray());
						var $query_historys = $('.query-history'),
							barwidth = [ 82, 216, 348, 426 ],
							recharge_record = [],
							$tempform = $(this).closest('.service-form'),
							formindex = $tempform.index('.service-form'),
							formArrays = [],//每个表单的序列对象数组
							data = {}; //传参的数据对象


						//提交全部验证
						var $tempchilds = _this.$forms.find('input[data-message], select[data-message], textarea[data-message]');
        				for(var i = 0, length = $tempchilds.length; i<length; i++) {
        					var $tempchild = $tempchilds.eq(i),
        						ErrorText = $tempchild.next('.field-error-message').text().replace(/\s+/g,"");

							if( !_this.contact_phone_status ){
								if( $tempchild.attr("id") === "contact_phone" ){
									continue;
								}
							}

							if( $tempchild.parent().hasClass("charge-child") ){
								//判断帐号充值
								if( modulesUtil.rechargeRecordCheck() ){
									return false;
								}
								continue;
							}

							if (  $tempchild.attr("id") == "register_date" ){
								if( ($tempchild[0].value == "请选择注册日期" ) || !$tempchild[0].value ){
									SQ.alert( $tempchild.data( "message" ).split(',')[0] );
									return false;
								}
								continue;
							}

							if( $tempchild.attr("id") == "aucode" ){
								if( !$tempchild.val() || ( $tempchild[0].value == "请输入右侧验证码" ) ) {
									SQ.alert('请输入验证码');
									//$tempdata.hasClass("no-focus") || $tempdata.focus();
									return false;
								}
								if( $tempchild.data("status") == "error") {
									SQ.alert('验证码输入错误');
									//$tempdata.hasClass("no-focus") || $tempdata.focus();
									return false;
								}
							}

        					if( $tempchild.val().length <= 0 ) {
        						SQ.alert( $tempchild.data( "message" ).split(',')[0] );
        						return false;
        					}

        					if ( ErrorText.length > 0 && !v.checkField( $tempchild )) {
    							SQ.alert(ErrorText);
        						return false;
        					}

        				}

						//判断是否阅读用户协议
						if($("input[name='bind']:checked").length == 0 ){
							return SQ.alert( "请认真阅读并同意用户协议~" );
						}

						/*构造传参*/
						for(var i = 0, flength = _this.$forms.length; i<flength; i++) {
							var tempArray = formArrays[i] = _this.$forms.eq(i).serializeArray();
							for(var j = 0, klength = tempArray.length; j<klength; j++ ) {
								data[tempArray[j].name] = $.trim(tempArray[j].value);

							}
						}
						/*特殊数据-注册地点与充值记录处理*/
						/*处理时间*/
						data['register_date'] = $("#register_date")[0].value ;
						//注册手机处理
						if ( _this.contact_phone_status ) {
							data['send_type'] = "contact_phone";
						}else{
							data['send_type'] = "register_phone";
							data['contact_phone'] = "";
						}

						//注册地点处理
						data['register_address'] = _this.$province.children("option:checked").text()+'-'+_this.$city.children("option:checked").text();
						//充值记录处理
						//获取帐号充值记录
						data['recharge_record'] = modulesUtil.rechargeRecordArr();

						//data数组去除多余name对象
						delete data.select_game;
						delete data.money_num;
						delete data.money_time;
						ajaxFn( $.extend( true, {}, _this.aj, {
	                        url: API.addplugin,
	                        data: data,
	                        successCall: function( res ) {
								if ( !res ) return;
	                            //刷新验证码
	                            $('#aucode').val('')
	                            	.siblings('.codeimg')
	                            	.attr('src', API.aucodeurl)
	                            	.siblings('#aucode').val('')
	                            	.siblings('.field-right-message').hide();
	                            if ( res.code == 1 ) {
									$('.service-bar-tips').children().eq(formindex+1).addClass('on').nextAll().removeClass('on');
									$('.service-bar-1').animate({width: barwidth[formindex+1]}, 200);

	                                if ( parseInt( cUser.info.VIP_DEEP) >= 6) {
										$('#service-form-result-vip').show();
									}else{
										$('#service-form-result').show();
									}

	                                $('#service-form-edit3').hide();
	                                $('.service-other').show();

	                                $('body, html').animate({ scrollTop: '229'},200);

	                            } else {
									modulesUtil.varCodeRefresh();
	                                SQ.alert( res.msg );
	                            }
	                        },
	                        failCall: function() {
	                            SQ.alert( "验证失败，请稍后再试" );
	                        }
	                    } ) );
					});
					//验证验证码是否输入正确
                //_this.$saveCode
                //	.on( "keyup", function() {
	             //       var $this = $( this ),
	             //       	$msgDom = $(this).siblings('.field-error-message'),
	             //           $rightDom = $(this).siblings('.field-right-message'),
	             //           msgText = $this.data( "message" );
	             //       if ( $this.val().length !== 4 ) {
	             //           SQ.log(msgText);
	             //           $msgDom.text( msgText ).show();
	             //           return;
	             //       }
	             //       ajaxFn( $.extend( true, {}, _this.aj, {
	             //           url: API.checkcode,
	             //           data: {
	             //               ajax: 1,
	             //               safe_code: $this.val()
	             //           },
	             //           successCall: function( res ) {
	             //               if ( !res ) return;
	             //               if ( res.code !== 1 ) {
	             //                   $msgDom.text( res.msg ).show();
	             //               } else {
	             //                   $msgDom.text('').hide();
	             //                   $rightDom.text( res.msg ).show();
	             //               }
	             //           },
	             //           failCall: function() {
	             //               $msgDom.text( "安全码验证失败，请稍后再试" );
	             //           }
	             //       } ) );
               	// 	} );

			},
			/**
			 * 切换单选
			 * @return {[type]} [description]
			 */
			toggleCheckbox: function(name) {
					var _this = this;
				//	name = name, //一组单选按钮的组名
				//	$check_items = $('.check-item[name='+name+']');
				$('form')
					/*选择手机号*/
					.on("click",".phone-checkbox",function(){
						var $this = $(this);
						$this
							.removeClass("c9").children("span").addClass("on")
							.end()
							.siblings(".phone-checkbox").addClass("c9").children("span").removeClass("on");

						if($this.data("phone")  === 1){
							$(".contact-phone").hide();
							_this.contact_phone_status = false;
						}else{
							$(".contact-phone").show();
							_this.contact_phone_status = true;
						}
					})
			}
		};
	return {
		init:function(){
			main.init();
		}
	};

});